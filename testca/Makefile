#############################################################################
# Makefile for building: testca
# Generated by qmake (2.01a) (Qt 4.8.6) on: la joulukuuta 13 21:30:56 2014
# Project:  testca.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile testca.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -fprofile-arcs -ftest-coverage -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I/usr/include/qt4/QtTest -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lssl -lcrypto -lgcrypt -lnatpmp -lqjson -lgcov -lQtTest -lQtSql -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = testca.cpp \
		../util/hash.cpp \
		mockup_controller.cpp \
		../datamodel/model.cpp \
		../datamodel/nodemodel.cpp \
		../datamodel/contentencryptionmodel.cpp \
		../net/networklistener.cpp \
		../net/protocol_message_formatter.cpp \
		../net/protocol_message_parser.cpp \
		../net/node.cpp \
		../net/connection.cpp \
		../datamodel/netrequestexecutor.cpp \
		../datamodel/profile.cpp \
		../datamodel/ca.cpp \
		../datamodel/binaryfile.cpp \
		../datamodel/profilemodel.cpp \
		mockup_model.cpp \
		mockup_nodemodel.cpp \
		../datamodel/camodel.cpp \
		../datamodel/binaryfilemodel.cpp \
		../datamodel/privmsgmodel.cpp \
		../datamodel/privmsg.cpp \
		../datamodel/profilecommentmodel.cpp \
		../datamodel/searchmodel.cpp \
		../datamodel/datamodelbase.cpp \
		../datamodel/profilecomment.cpp moc_mcontroller.cpp \
		moc_mockup_controller.cpp \
		moc_model.cpp \
		moc_nodemodel.cpp \
		moc_contentencryptionmodel.cpp \
		moc_networklistener.cpp \
		moc_protocol_message_parser.cpp \
		moc_node.cpp \
		moc_connection.cpp \
		moc_netrequestexecutor.cpp \
		moc_profile.cpp \
		moc_camodel.cpp \
		moc_binaryfilemodel.cpp \
		moc_profilemodel.cpp \
		moc_mockup_model.cpp \
		moc_mmodelprotocolinterface.cpp \
		moc_mockup_nodemodel.cpp \
		moc_privmsgmodel.cpp \
		moc_profilecommentmodel.cpp \
		moc_searchmodel.cpp \
		moc_datamodelbase.cpp
OBJECTS       = testca.o \
		hash.o \
		mockup_controller.o \
		model.o \
		nodemodel.o \
		contentencryptionmodel.o \
		networklistener.o \
		protocol_message_formatter.o \
		protocol_message_parser.o \
		node.o \
		connection.o \
		netrequestexecutor.o \
		profile.o \
		ca.o \
		binaryfile.o \
		profilemodel.o \
		mockup_model.o \
		mockup_nodemodel.o \
		camodel.o \
		binaryfilemodel.o \
		privmsgmodel.o \
		privmsg.o \
		profilecommentmodel.o \
		searchmodel.o \
		datamodelbase.o \
		profilecomment.o \
		moc_mcontroller.o \
		moc_mockup_controller.o \
		moc_model.o \
		moc_nodemodel.o \
		moc_contentencryptionmodel.o \
		moc_networklistener.o \
		moc_protocol_message_parser.o \
		moc_node.o \
		moc_connection.o \
		moc_netrequestexecutor.o \
		moc_profile.o \
		moc_camodel.o \
		moc_binaryfilemodel.o \
		moc_profilemodel.o \
		moc_mockup_model.o \
		moc_mmodelprotocolinterface.o \
		moc_mockup_nodemodel.o \
		moc_privmsgmodel.o \
		moc_profilecommentmodel.o \
		moc_searchmodel.o \
		moc_datamodelbase.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qtestlib.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		testca.pro
QMAKE_TARGET  = testca
DESTDIR       = 
TARGET        = testca

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: testca.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qtestlib.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtTest.prl \
		/usr/lib/x86_64-linux-gnu/libQtSql.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile testca.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qtestlib.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtTest.prl:
/usr/lib/x86_64-linux-gnu/libQtSql.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile testca.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/testca1.0.0 || $(MKDIR) .tmp/testca1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/testca1.0.0/ && $(COPY_FILE) --parents ../util/hash.h ../mcontroller.h mockup_controller.h ../datamodel/model.h ../datamodel/nodemodel.h ../datamodel/contentencryptionmodel.h ../net/networklistener.h ../net/protocol_message_formatter.h ../net/protocol_message_parser.h ../net/node.h ../net/connection.h ../datamodel/netrequestexecutor.h ../datamodel/profile.h ../datamodel/camodel.h ../datamodel/ca.h ../datamodel/binaryfile.h ../datamodel/binaryfilemodel.h ../datamodel/profilemodel.h mockup_model.h ../datamodel/mmodelprotocolinterface.h ../datamodel/mnodemodelprotocolinterface.h mockup_nodemodel.h ../datamodel/privmsgmodel.h ../datamodel/privmsg.h ../datamodel/profilecommentmodel.h ../datamodel/searchmodel.h ../datamodel/datamodelbase.h ../datamodel/profilecomment.h .tmp/testca1.0.0/ && $(COPY_FILE) --parents testca.cpp ../util/hash.cpp mockup_controller.cpp ../datamodel/model.cpp ../datamodel/nodemodel.cpp ../datamodel/contentencryptionmodel.cpp ../net/networklistener.cpp ../net/protocol_message_formatter.cpp ../net/protocol_message_parser.cpp ../net/node.cpp ../net/connection.cpp ../datamodel/netrequestexecutor.cpp ../datamodel/profile.cpp ../datamodel/ca.cpp ../datamodel/binaryfile.cpp ../datamodel/profilemodel.cpp mockup_model.cpp mockup_nodemodel.cpp ../datamodel/camodel.cpp ../datamodel/binaryfilemodel.cpp ../datamodel/privmsgmodel.cpp ../datamodel/privmsg.cpp ../datamodel/profilecommentmodel.cpp ../datamodel/searchmodel.cpp ../datamodel/datamodelbase.cpp ../datamodel/profilecomment.cpp .tmp/testca1.0.0/ && (cd `dirname .tmp/testca1.0.0` && $(TAR) testca1.0.0.tar testca1.0.0 && $(COMPRESS) testca1.0.0.tar) && $(MOVE) `dirname .tmp/testca1.0.0`/testca1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/testca1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mcontroller.cpp moc_mockup_controller.cpp moc_model.cpp moc_nodemodel.cpp moc_contentencryptionmodel.cpp moc_networklistener.cpp moc_protocol_message_parser.cpp moc_node.cpp moc_connection.cpp moc_netrequestexecutor.cpp moc_profile.cpp moc_camodel.cpp moc_binaryfilemodel.cpp moc_profilemodel.cpp moc_mockup_model.cpp moc_mmodelprotocolinterface.cpp moc_mockup_nodemodel.cpp moc_privmsgmodel.cpp moc_profilecommentmodel.cpp moc_searchmodel.cpp moc_datamodelbase.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mcontroller.cpp moc_mockup_controller.cpp moc_model.cpp moc_nodemodel.cpp moc_contentencryptionmodel.cpp moc_networklistener.cpp moc_protocol_message_parser.cpp moc_node.cpp moc_connection.cpp moc_netrequestexecutor.cpp moc_profile.cpp moc_camodel.cpp moc_binaryfilemodel.cpp moc_profilemodel.cpp moc_mockup_model.cpp moc_mmodelprotocolinterface.cpp moc_mockup_nodemodel.cpp moc_privmsgmodel.cpp moc_profilecommentmodel.cpp moc_searchmodel.cpp moc_datamodelbase.cpp
moc_mcontroller.cpp: ../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../mcontroller.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../mcontroller.h -o moc_mcontroller.cpp

moc_mockup_controller.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		mockup_model.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/mnodemodelprotocolinterface.h \
		mockup_controller.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mockup_controller.h -o moc_mockup_controller.cpp

moc_model.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/model.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/model.h -o moc_model.cpp

moc_nodemodel.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/nodemodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/nodemodel.h -o moc_nodemodel.cpp

moc_contentencryptionmodel.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/contentencryptionmodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/contentencryptionmodel.h -o moc_contentencryptionmodel.cpp

moc_networklistener.cpp: ../net/connection.h \
		../net/protocol.h \
		../util/hash.h \
		../net/node.h \
		../net/networklistener.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../net/networklistener.h -o moc_networklistener.cpp

moc_protocol_message_parser.cpp: ../net/protocol.h \
		../util/hash.h \
		../net/node.h \
		../net/connection.h \
		../net/protocol_message_parser.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../net/protocol_message_parser.h -o moc_protocol_message_parser.cpp

moc_node.cpp: ../util/hash.h \
		../net/node.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../net/node.h -o moc_node.cpp

moc_connection.cpp: ../net/protocol.h \
		../util/hash.h \
		../net/node.h \
		../net/connection.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../net/connection.h -o moc_connection.cpp

moc_netrequestexecutor.cpp: ../net/protocol.h \
		../util/hash.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/netrequestexecutor.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/netrequestexecutor.h -o moc_netrequestexecutor.cpp

moc_profile.cpp: ../util/hash.h \
		../datamodel/profile.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/profile.h -o moc_profile.cpp

moc_camodel.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../datamodel/camodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/camodel.h -o moc_camodel.cpp

moc_binaryfilemodel.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../datamodel/binaryfilemodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/binaryfilemodel.h -o moc_binaryfilemodel.cpp

moc_profilemodel.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../datamodel/profilemodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/profilemodel.h -o moc_profilemodel.cpp

moc_mockup_model.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/mnodemodelprotocolinterface.h \
		mockup_model.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mockup_model.h -o moc_mockup_model.cpp

moc_mmodelprotocolinterface.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/mmodelprotocolinterface.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/mmodelprotocolinterface.h -o moc_mmodelprotocolinterface.cpp

moc_mockup_nodemodel.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/mnodemodelprotocolinterface.h \
		mockup_nodemodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mockup_nodemodel.h -o moc_mockup_nodemodel.cpp

moc_privmsgmodel.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../datamodel/privmsgmodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/privmsgmodel.h -o moc_privmsgmodel.cpp

moc_profilecommentmodel.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../datamodel/profilecommentmodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/profilecommentmodel.h -o moc_profilecommentmodel.cpp

moc_searchmodel.cpp: ../util/hash.h \
		../net/protocol.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/searchmodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/searchmodel.h -o moc_searchmodel.cpp

moc_datamodelbase.cpp: ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../datamodel/datamodelbase.h -o moc_datamodelbase.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all: testca.moc
compiler_moc_source_clean:
	-$(DEL_FILE) testca.moc
testca.moc: ../util/hash.h \
		mockup_controller.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		mockup_model.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/mnodemodelprotocolinterface.h \
		mockup_nodemodel.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/datamodelbase.h \
		../datamodel/contentencryptionmodel.h \
		../log.h \
		../net/protocol_message_formatter.h \
		../datamodel/searchmodel.h \
		../net/protocol_message_parser.h \
		../datamodel/camodel.h \
		../datamodel/ca.h \
		../datamodel/profilemodel.h \
		../datamodel/profile.h \
		testca.cpp
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) testca.cpp -o testca.moc

compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_moc_source_clean 

####### Compile

testca.o: testca.cpp ../util/hash.h \
		mockup_controller.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		mockup_model.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/mnodemodelprotocolinterface.h \
		mockup_nodemodel.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/datamodelbase.h \
		../datamodel/contentencryptionmodel.h \
		../log.h \
		../net/protocol_message_formatter.h \
		../datamodel/searchmodel.h \
		../net/protocol_message_parser.h \
		../datamodel/camodel.h \
		../datamodel/ca.h \
		../datamodel/profilemodel.h \
		../datamodel/profile.h \
		testca.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o testca.o testca.cpp

hash.o: ../util/hash.cpp ../util/hash.h \
		../log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hash.o ../util/hash.cpp

mockup_controller.o: mockup_controller.cpp mockup_controller.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		mockup_model.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/datamodelbase.h \
		../net/networklistener.h \
		../net/networkconnectorengine.h \
		../controller.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mockup_controller.o mockup_controller.cpp

model.o: ../datamodel/model.cpp ../datamodel/model.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../log.h \
		../net/protocol_message_formatter.h \
		../datamodel/searchmodel.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/profilemodel.h \
		../datamodel/binaryfilemodel.h \
		../datamodel/camodel.h \
		../datamodel/privmsgmodel.h \
		../datamodel/profilecommentmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o model.o ../datamodel/model.cpp

nodemodel.o: ../datamodel/nodemodel.cpp ../datamodel/nodemodel.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../log.h \
		../net/protocol_message_formatter.h \
		../datamodel/searchmodel.h \
		../datamodel/model.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/camodel.h \
		../datamodel/binaryfilemodel.h \
		../datamodel/profilemodel.h \
		../datamodel/privmsgmodel.h \
		../datamodel/profilecommentmodel.h \
		../datamodel/const.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nodemodel.o ../datamodel/nodemodel.cpp

contentencryptionmodel.o: ../datamodel/contentencryptionmodel.cpp ../datamodel/contentencryptionmodel.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o contentencryptionmodel.o ../datamodel/contentencryptionmodel.cpp

networklistener.o: ../net/networklistener.cpp ../net/networklistener.h \
		../net/connection.h \
		../net/protocol.h \
		../util/hash.h \
		../net/node.h \
		../log.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../net/protocol_message_parser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o networklistener.o ../net/networklistener.cpp

protocol_message_formatter.o: ../net/protocol_message_formatter.cpp ../net/protocol_message_formatter.h \
		../net/protocol.h \
		../util/hash.h \
		../datamodel/searchmodel.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/connection.h \
		../net/node.h \
		../log.h \
		../datamodel/const.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o protocol_message_formatter.o ../net/protocol_message_formatter.cpp

protocol_message_parser.o: ../net/protocol_message_parser.cpp ../net/protocol_message_parser.h \
		../net/protocol.h \
		../util/hash.h \
		../net/node.h \
		../net/connection.h \
		../log.h \
		../datamodel/mmodelprotocolinterface.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/profilemodel.h \
		../datamodel/datamodelbase.h \
		../datamodel/binaryfilemodel.h \
		../datamodel/camodel.h \
		../datamodel/privmsgmodel.h \
		../datamodel/profilecommentmodel.h \
		../datamodel/searchmodel.h \
		../net/protocol_message_formatter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o protocol_message_parser.o ../net/protocol_message_parser.cpp

node.o: ../net/node.cpp ../net/node.h \
		../util/hash.h \
		../log.h \
		../net/connection.h \
		../net/protocol.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o node.o ../net/node.cpp

connection.o: ../net/connection.cpp ../net/connection.h \
		../net/protocol.h \
		../util/hash.h \
		../net/node.h \
		../log.h \
		../datamodel/model.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/profilemodel.h \
		../datamodel/camodel.h \
		../datamodel/binaryfilemodel.h \
		../datamodel/privmsgmodel.h \
		../datamodel/profilecommentmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o connection.o ../net/connection.cpp

netrequestexecutor.o: ../datamodel/netrequestexecutor.cpp ../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../net/protocol_message_formatter.h \
		../datamodel/searchmodel.h \
		../datamodel/profilemodel.h \
		../datamodel/profile.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/binaryfilemodel.h \
		../datamodel/camodel.h \
		../datamodel/privmsgmodel.h \
		../datamodel/profilecommentmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o netrequestexecutor.o ../datamodel/netrequestexecutor.cpp

profile.o: ../datamodel/profile.cpp ../datamodel/profile.h \
		../util/hash.h \
		../log.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/contentencryptionmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o profile.o ../datamodel/profile.cpp

ca.o: ../datamodel/ca.cpp ../datamodel/ca.h \
		../util/hash.h \
		../log.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/profile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ca.o ../datamodel/ca.cpp

binaryfile.o: ../datamodel/binaryfile.cpp ../datamodel/binaryfile.h \
		../util/hash.h \
		../log.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/contentencryptionmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o binaryfile.o ../datamodel/binaryfile.cpp

profilemodel.o: ../datamodel/profilemodel.cpp ../datamodel/profilemodel.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/profile.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/const.h \
		../datamodel/searchmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o profilemodel.o ../datamodel/profilemodel.cpp

mockup_model.o: mockup_model.cpp mockup_model.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/mnodemodelprotocolinterface.h \
		mockup_nodemodel.h \
		../log.h \
		../datamodel/profilemodel.h \
		../datamodel/datamodelbase.h \
		../datamodel/binaryfilemodel.h \
		../datamodel/camodel.h \
		../datamodel/privmsgmodel.h \
		../datamodel/profilecommentmodel.h \
		../datamodel/searchmodel.h \
		../datamodel/contentencryptionmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mockup_model.o mockup_model.cpp

mockup_nodemodel.o: mockup_nodemodel.cpp mockup_nodemodel.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mockup_nodemodel.o mockup_nodemodel.cpp

camodel.o: ../datamodel/camodel.cpp ../datamodel/camodel.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/ca.h \
		../datamodel/profile.h \
		../datamodel/const.h \
		../datamodel/searchmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o camodel.o ../datamodel/camodel.cpp

binaryfilemodel.o: ../datamodel/binaryfilemodel.cpp ../datamodel/binaryfilemodel.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/binaryfile.h \
		../datamodel/profile.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/profilemodel.h \
		../datamodel/const.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o binaryfilemodel.o ../datamodel/binaryfilemodel.cpp

privmsgmodel.o: ../datamodel/privmsgmodel.cpp ../datamodel/privmsgmodel.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/privmsg.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/const.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o privmsgmodel.o ../datamodel/privmsgmodel.cpp

privmsg.o: ../datamodel/privmsg.cpp ../datamodel/ca.h \
		../util/hash.h \
		../log.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/privmsg.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o privmsg.o ../datamodel/privmsg.cpp

profilecommentmodel.o: ../datamodel/profilecommentmodel.cpp ../datamodel/profilecommentmodel.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../datamodel/datamodelbase.h \
		../datamodel/profilemodel.h \
		../datamodel/profile.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/profilecomment.h \
		../datamodel/contentencryptionmodel.h \
		../datamodel/const.h \
		../datamodel/searchmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o profilecommentmodel.o ../datamodel/profilecommentmodel.cpp

searchmodel.o: ../datamodel/searchmodel.cpp ../datamodel/searchmodel.h \
		../util/hash.h \
		../net/protocol.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/connection.h \
		../net/node.h \
		../log.h \
		../datamodel/ca.h \
		../datamodel/profile.h \
		../datamodel/profilecomment.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o searchmodel.o ../datamodel/searchmodel.cpp

datamodelbase.o: ../datamodel/datamodelbase.cpp ../datamodel/datamodelbase.h \
		../mcontroller.h \
		../util/hash.h \
		../datamodel/netrequestexecutor.h \
		../net/protocol.h \
		../net/connection.h \
		../net/node.h \
		../log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datamodelbase.o ../datamodel/datamodelbase.cpp

profilecomment.o: ../datamodel/profilecomment.cpp ../datamodel/profilecomment.h \
		../util/hash.h \
		../net/protocol.h \
		../mcontroller.h \
		../datamodel/netrequestexecutor.h \
		../net/connection.h \
		../net/node.h \
		../log.h \
		../datamodel/model.h \
		../datamodel/nodemodel.h \
		../datamodel/mnodemodelprotocolinterface.h \
		../datamodel/datamodelbase.h \
		../datamodel/mmodelprotocolinterface.h \
		../datamodel/contentencryptionmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o profilecomment.o ../datamodel/profilecomment.cpp

moc_mcontroller.o: moc_mcontroller.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mcontroller.o moc_mcontroller.cpp

moc_mockup_controller.o: moc_mockup_controller.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mockup_controller.o moc_mockup_controller.cpp

moc_model.o: moc_model.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_model.o moc_model.cpp

moc_nodemodel.o: moc_nodemodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_nodemodel.o moc_nodemodel.cpp

moc_contentencryptionmodel.o: moc_contentencryptionmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_contentencryptionmodel.o moc_contentencryptionmodel.cpp

moc_networklistener.o: moc_networklistener.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_networklistener.o moc_networklistener.cpp

moc_protocol_message_parser.o: moc_protocol_message_parser.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_protocol_message_parser.o moc_protocol_message_parser.cpp

moc_node.o: moc_node.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_node.o moc_node.cpp

moc_connection.o: moc_connection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_connection.o moc_connection.cpp

moc_netrequestexecutor.o: moc_netrequestexecutor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_netrequestexecutor.o moc_netrequestexecutor.cpp

moc_profile.o: moc_profile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_profile.o moc_profile.cpp

moc_camodel.o: moc_camodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_camodel.o moc_camodel.cpp

moc_binaryfilemodel.o: moc_binaryfilemodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_binaryfilemodel.o moc_binaryfilemodel.cpp

moc_profilemodel.o: moc_profilemodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_profilemodel.o moc_profilemodel.cpp

moc_mockup_model.o: moc_mockup_model.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mockup_model.o moc_mockup_model.cpp

moc_mmodelprotocolinterface.o: moc_mmodelprotocolinterface.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mmodelprotocolinterface.o moc_mmodelprotocolinterface.cpp

moc_mockup_nodemodel.o: moc_mockup_nodemodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mockup_nodemodel.o moc_mockup_nodemodel.cpp

moc_privmsgmodel.o: moc_privmsgmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_privmsgmodel.o moc_privmsgmodel.cpp

moc_profilecommentmodel.o: moc_profilecommentmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_profilecommentmodel.o moc_profilecommentmodel.cpp

moc_searchmodel.o: moc_searchmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_searchmodel.o moc_searchmodel.cpp

moc_datamodelbase.o: moc_datamodelbase.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_datamodelbase.o moc_datamodelbase.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

